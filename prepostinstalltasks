https://github.com/ralvianus/ocp-install


pasted here for convienience:




LabOps Openshift Install
Overview
This script runs the flow of installing Openshift Cluster in vSphere environment 

Prepare the Pre-requisites
Clone the repository

git clone https://github.com/ralvianus/ocp-install
cd ocp-install
Run the shell script

./ocp-install-prep.sh
Edit install-config.yaml
Defining the compute nodes

compute:
- architecture: amd64
  hyperthreading: Enabled
  name: worker
  platform: {}
  replicas: 2
Defining the control-plane node

controlPlane:
  architecture: amd64
  hyperthreading: Enabled
  name: master
  platform: {}
  replicas: 1
Defining the network config

networking:
  clusterNetwork:
  - cidr: 10.128.0.0/14
    hostPrefix: 23
  machineNetwork:
  - cidr: 10.0.0.0/16
  networkType: OpenShiftSDN
  serviceNetwork:
  - 172.30.0.0/16
Platform configuration

platform:
  vsphere:
    apiVIP: 172.16.10.251
    cluster: cmp
    datacenter: lab01
    defaultDatastore: vsanDatastore
    ingressVIP: 172.16.10.252
    network: pg-mgmt
    password: VMware1!SDDC
    username: administrator@vsphere.local
    vCenter: vcenter.lab01.one
Inserting pull secret from Redhat Portal

pullSecret: '{"auths":{"cloud.openshift.com":{"auth":"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3JhbHZpYW51c3Ztd2FyZWNvbTF3anR
<output omitted>
KcER1dnpPTWRmSmNFbXVWSDU3TWcwc29SRnkyLVZMMlhxQlJ2Rms1YjZnMGhEMW5XTjRVV2xTbHREV1pOTXR5OEdIcTVZTURoTjA0MF9NZ2ZzcEpNeHh5a0Y5cWpFXzlTaw==","email":"ralvianus@vmware.com"}}}'
Inserting ssh public key

cat ~/.ssh/id_rsa.pub
Openshift Install
openshift-install create cluster
Post Installation
After installing the cluster, run this script to get the kubeconfig directory created

./ocp-install-post.sh
Login to the cluster
$ export KUBECONFIG=~/ocp-install/auth/kubeconfig

$ oc login
Authentication required for https://api.ocp-east.lab01.one:6443 (openshift)
Username: kubeadmin
Password:
Login successful.

You have access to 57 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project "default".

$ oc whoami
system:admin

$ oc get nodes
NAME                       STATUS     ROLES    AGE    VERSION
ocp01-5n9hb-master-0       Ready      master   69m    v1.18.3+002a51f
ocp01-5n9hb-master-1       Ready      master   69m    v1.18.3+002a51f
ocp01-5n9hb-master-2       Ready      master   69m    v1.18.3+002a51f
ocp01-5n9hb-worker-2btk5   Ready      worker   55m    v1.18.3+002a51f
ocp01-5n9hb-worker-6plhb   Ready      worker   55m    v1.18.3+002a51f
ocp01-5n9hb-worker-qknqq   Ready      worker   55m    v1.18.3+002a51f
ocp01-5n9hb-worker-xgp7g   Ready      worker   7m9s   v1.18.3+002a51f





PREP:


#!/bin/bash

# Ask for version input
read -p 'OCP Version: ' ocp_version
read -p 'vCenter FQDN: ' vcenter
echo
echo
echo ====================================

# Download requirements
if [ -f /etc/redhat-release ]; then
  yum install unzip -y
fi

if [ -f /etc/lsb-release ]; then
  apt-get install unzip -y
fi


# Download Openshift Software
echo Start downloading Openshift $ocp_version
wget https://mirror.openshift.com/pub/openshift-v4/clients/ocp/$ocp_version/openshift-client-linux.tar.gz
wget https://mirror.openshift.com/pub/openshift-v4/clients/ocp/$ocp_version/openshift-install-linux.tar.gz
echo Download complete
echo ====================================
echo

# Untar and move the client and installer to bin
echo Extracting openshift-install-linux.tar.gz
tar xvf openshift-install-linux.tar.gz
echo

echo Extracting openshift-client-linux.tar.gz
tar xvf openshift-client-linux.tar.gz
echo

mv oc kubectl openshift-install /usr/local/bin/
rm -f *.tar.gz
echo Extract complete
echo ====================================

# Generating SSH Private Key
echo Generating SSH Key
ssh-keygen -t rsa -b 2048 -N '' -f ~/.ssh/id_rsa
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa
echo Generating SSH Key completed
echo ====================================

# Downloading vCenter Root CA
echo Downloading root CA from vCenter
wget https://$vcenter/certs/download.zip --no-check-certificate
echo Downloading completed
echo
echo Extracting the zip file
unzip download.zip
echo Extracting completed

# Rename the cert file
echo Renaming the cert files
for f in certs/lin/*.0; do
  mv -- "$f" "${f%.0}.crt";
done
echo Renaming the cert files completed
echo ====================================

#Copy the cert file into the system
echo Installing CA Cert into the system
if [ -f /etc/redhat-release ]; then
  cp certs/lin/*.crt /etc/pki/ca-trust/source/anchors/
  update-ca-trust
fi

if [ -f /etc/lsb-release ]; then
  sudo mkdir /usr/share/ca-certificates/extra
  sudo cp certs/lin/*.crt /usr/share/ca-certificates/extra
  sudo dpkg-reconfigure ca-certificates
fi
echo Installing CA Cert completed
echo ====================================



POST:


#!/bin/bash

if [[ ! -f "~/.kube/config" ]]; then
  echo Creating kubeconfig Directory
  mkdir ~/.kube
  touch ~/.kube/config
  echo Directory created
else
  echo kubeconfig file exists
fi
echo ====================================

echo Copying kubeconfig
cat $PWD/auth/kubeconfig >> ~/.kube/config
echo kubeconfig copied
echo ====================================
